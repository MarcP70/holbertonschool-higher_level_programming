>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix_divided([[1, 2, 3],[4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix_divided([[1.4, 2, 3],[4, 5, 6]], 3)
[[0.47, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix_divided([['t', 2, 3],[4, 5, 6]], 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([1, 2, 3], 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(None, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2, 3],[4, 5, 6]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix_divided([[1, 2, 3],[4, 5, 6]], None)
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided([[1, 2, 3, 7],[4, 5, 6]], 3)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[1, 2, 3],[4, 5, 6]], 3.2)
[[0.31, 0.62, 0.94], [1.25, 1.56, 1.88]]

>>> matrix_divided([[1, 2, 3, 7],[4, 5, 6]])
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix_divided()
Traceback (most recent call last):
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

>>> matrix_divided(2)
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix_divided([[1, 2, 3],[4, 5, 6]], float('nan'))
[[nan, nan, nan], [nan, nan, nan]]

>>> matrix_divided([[1, 2, 3],[4, 5, 6]], float('inf'))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
